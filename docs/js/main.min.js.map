{"version":3,"sources":["settings.js","main.js"],"names":["window","Settings","options","Object","assign","this","toggle","element","classList","opened","init","toggler","addEventListener","bind","$check","document","getElementById","$log","querySelector","$loader","event","get","form","FormData","entries","map","e","encodeURIComponent","join","preventDefault","remove","add","innerHTML","url","disabled","submit","fetch","action","then","response","ok","text","Error","data","pairs","rules","rulesJson","JSON","parse","ruleResults","formattedResults","speedScore","ruleGroups","SPEED","score","Speed","localizedRuleName","ruleImpact","convertRules2pairs","reduce","rule","key","value","push","name","impact","sortedRules","sort","prev","current","html","toFixed","catch","error","message"],"mappings":"CAAA;IAqBAA,OAAAC,WApBA,SAAAC;QACAC,OAAAC,OAAAC,MAAAH,IAEAG,KAAAC,SAAA;YACAD,KAAAE,QAAAC,UAAAF,OAAAD,KAAAI;WAQAJ,KAAAK,OAAA;YACAL,KAAAM,QAAAC,iBAAA,SAAAP,KAAAC,OAAAO,KAAAR;;;CAdA,ICAA,SAAAJ;IACA,MAAAa,IAAAC,SAAAC,eAAA,UACAC,IAAAF,SAAAG,cAAA,SACAC,IAAAJ,SAAAC,eAAA;IAIA,IAAAf;QACAM,SAJAQ,SAAAG,cAAA;QAKAP,SAJAI,SAAAG,cAAA;QAKAT,QAAA;OAEAC;IAsFAI,EAAAF,iBAAA,UAnCA,SAAAQ;QACA,MAAAC,KAlDAC,IAkDAR,QAjDA,IAAAd,OAAAuB,SAAAD,GAAAE,YACAC,IAAAC,KAAAA,EAAAD,IAAAE,oBAAAC,KAAA,MAAAA,KAAA;QAFA,IAAAN;QAmDAF,EAAAS,kBACAZ,EAAAT,UAAAsB,OAAA,iBACAX,EAAAX,UAAAuB,IAAA;QACAd,EAAAe,YAAA,IAEAlB,EAAAmB,IAAAC,YAAA,GACApB,EAAAqB,OAAAD,YAAA,GACAE,MAAAtB,EAAAuB,SAAA,MAAAhB,GACAiB,KAAAC;YACA,IAAAA,EAAAC,IACA,OAAAD,EAAAE;YAEA,MAAAC,MAAA;WAEAJ,KAAAK;YACA,MAAAC,IA7BA,SAAAC;gBACA,MAAAC,IAAAC,KAAAC,MAAAH,IACAI,IAAAH,EAAAI,iBAAAD,aACAE,IAAAL,EAAAM,WAAAC,MAAAC;gBAMA,OALAL,EAAAM;oBACAC,mBAAA;oBACAC,YAAAN;mBAGAhD,OAAAqB,QAAAyB;aAoBAS,CAAAf,IACAE,KA1DAD,IA0DAA,GAzDAA,EAAAe,OAAA,CAAAd,GAAAe;gBACA,OAAAC,GAAAC,KAAAF;gBAQA,OANAf,EAAAkB;oBACAF,KAAAA;oBACAG,MAAAF,EAAAN;oBACAS,QAAAH,EAAAL;oBAGAZ;qBAiDAqB,KA/DAvB,IA+DAE,GA9DAF,EAAAwB,KAAA,CAAAC,GAAAC,MAAAA,EAAAJ,SAAAG,EAAAH;YAiBAtB,IA+CAuB,GA9CAjD,EAAAe,YAAAW,EAAAgB,OAAA,CAAAW,GAAAV;gBACA,MAAAK,IAAAL,EAAAK,OAAAM,QAAA;gBAGA,UAAAD,6CAFA,IAAAL,IAAA,SAAA,+CAIAA,6FAEAL,EAAAI;eAEA,KAsCA/C,EAAAT,UAAAuB,IAAA,iBACAZ,EAAAX,UAAAsB,OAAA,iBACAhB,EAAAmB,IAAAC,YAAA;YACApB,EAAAqB,OAAAD,YAAA;WAEAsC,MAAAC;YACAxD,EAAAe,+CAAAyC,EAAAC,kBACAzD,EAAAT,UAAAuB,IAAA;YACAZ,EAAAX,UAAAsB,OAAA;;QAzDA,IAAAa,GAlBAA,GAIAC;;CAvBA,CAmGA5C,OAAAC","file":"main.min.js","sourcesContent":["(function () {\n  function Settings (options) {\n    Object.assign(this, options)\n\n    this.toggle = function () {\n      this.element.classList.toggle(this.opened)\n    }\n    // this.show = function () {\n    //   this.element.classList.add(this.opened)\n    // }\n    // this.hide = function () {\n    //   this.element.classList.remove(this.opened)\n    // }\n    this.init = function () {\n      this.toggler.addEventListener('click', this.toggle.bind(this))\n    }\n    // this.destroy = function () {\n    //   this.toggler.removeEventListener('click', this.toggle.bind(this))\n    // }\n  }\n\n  window.Settings = Settings\n})();\n","(function (Settings) {\n  const $check = document.getElementById('check')\n  const $log = document.querySelector('.log')\n  const $loader = document.getElementById('loader')\n  const $settings = document.querySelector('.settings')\n  const $toggler = document.querySelector('.settings__toggle')\n\n  const settings = new Settings({\n    element: $settings,\n    toggler: $toggler,\n    opened: 'settings--opened'\n  })\n  settings.init()\n\n  function serializeForm (form) {\n    return [...new window.FormData(form).entries()]\n      .map(e => e.map(encodeURIComponent).join('=')).join('&')\n  }\n\n  function sortByImpact (data) {\n    return data.sort((prev, current) => current.impact - prev.impact)\n  }\n\n  function getRules (pairs) {\n    return pairs.reduce((rules, rule) => {\n      const [key, value] = rule\n\n      rules.push({\n        key: key,\n        name: value.localizedRuleName,\n        impact: value.ruleImpact\n      })\n\n      return rules\n    }, [])\n  }\n\n  function renderSuggestions (data) {\n    $log.innerHTML = data.reduce((html, rule) => {\n      const impact = rule.impact.toFixed(1)\n      const lineClass = impact < 3 ? 'fine' : 'warn'\n\n      return `${html}\n      <div class=\"log__line log__line--${lineClass}\">\n        <span class=\"log__impact\">${impact}</span>\n        <span class=\"log__delimiter\">: </span>\n        <span class=\"log__text\">${rule.name}</span>\n      </div>`\n    }, '')\n  }\n\n  function convertRules2pairs (rules) {\n    const rulesJson = JSON.parse(rules)\n    const ruleResults = rulesJson.formattedResults.ruleResults\n    const speedScore = rulesJson.ruleGroups.SPEED.score\n    ruleResults.Speed = {\n      localizedRuleName: 'Total',\n      ruleImpact: speedScore\n    }\n\n    return Object.entries(ruleResults)\n  }\n\n  function getSortedErrors (event) {\n    const get = serializeForm($check)\n    event.preventDefault()\n    $log.classList.remove('log--visible')\n    $loader.classList.add('page-loading')\n    $log.innerHTML = ''\n\n    $check.url.disabled = true\n    $check.submit.disabled = true\n    fetch($check.action + '?' + get)\n      .then(response => {\n        if (response.ok) {\n          return response.text()\n        }\n        throw new Error('An error occurred while retrieving or analyzing the page')\n      })\n      .then(data => {\n        const pairs = convertRules2pairs(data)\n        const rules = getRules(pairs)\n        const sortedRules = sortByImpact(rules)\n\n        renderSuggestions(sortedRules)\n\n        $log.classList.add('log--visible')\n        $loader.classList.remove('page-loading')\n        $check.url.disabled = false\n        $check.submit.disabled = false\n      })\n      .catch(error => {\n        $log.innerHTML = `<span class=\"log__error\">Error: ${error.message}</span>`\n        $log.classList.add('log--visible')\n        $loader.classList.remove('page-loading')\n      })\n  }\n\n  $check.addEventListener('submit', getSortedErrors)\n})(window.Settings);\n"]}